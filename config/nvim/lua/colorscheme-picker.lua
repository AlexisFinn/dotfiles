--
-- local popfix = require('popfix')
-- local previous = ''
-- local current = ''
--
-- local blacklist = {
--   OceanicNextLight = true,
--   blue = true,
--   default = true,
--   delek = true,
--   elflord = true,
--   industry = true,
--   koehler = true,
--   morning = true,
--   pablo = true,
--   ron = true,
--   shine = true,
--   torte = true,
--   darkblue = true,
--   murphy = true
-- }
--
-- function PickColorScheme()
--   local colorschemes = vim.fn.getcompletion('', 'color')
--   for key, value in ipairs(colorschemes) do
--     if blacklist[value] then
--       table.remove(colorschemes, key)
--     end
--   end
--   previous = vim.g.colors_name
--   popfix:new({
--     height = 40,
--     width = 40,
--     mode = 'editor',
--     close_on_bufleave = true,
--     data = colorschemes,
--     list = {
--       border = true,
--       numbering = true,
--       title = 'MyTitle',
--       highlight = 'Normal',
--       selection_highlight = 'Visual',
--       matching_highlight = 'Identifier',
--     },
--     callbacks = {
--       select = Preview
--     },
--     keymaps = {
--       n = {
--         ['<Cr>'] = function(popup)
--           Pick(current)
--           popup:close()
--         end,
--         ['<Esc>'] = function(popup)
--           Pick(previous)
--           popup:close()
--         end
--       },
--       i = {
--         ['<Cr>'] = function(popup)
--           Pick(current)
--           popup:close()
--         end,
--         ['<Esc>'] = function(popup)
--           Pick(previous)
--           popup:close()
--         end
--       }
--     }
--   })
-- end
--
-- function Preview(_, line)
--   if line then
--     Pick(line)
--     current = vim.g.colors_name
--   end
-- end
--
-- function Pick(color)
--   vim.cmd('color '..color)
-- end

-- vim.api.nvim_exec('command! ColorSchemePicker lua PickColorScheme()', false)
vim.api.nvim_exec('command! ColorSchemePicker Telescope colorscheme', false)
